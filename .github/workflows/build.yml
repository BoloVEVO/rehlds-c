name: C/C++ CI

on:
  push:
    branches: [master]
    paths-ignore:
      - '**.md'

  pull_request:
    types: [opened, reopened, synchronize]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  windows:
    name: 'Windows'
    runs-on: windows-2019

    env:
      solution: 'msvc/ReHLDS.sln'
      buildPlatform: 'Win32'
      buildRelease: 'Release'

    steps:
      - name: Configure
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build
        run: |
          msbuild ${{ env.solution }} -p:Configuration="${{ env.buildRelease }}" /t:Clean,Build /p:Platform=${{ env.buildPlatform }} /p:PlatformToolset=v140_xp /p:XPDeprecationWarning=false

      - name: Move files
        run: |


          mkdir publish
          move msvc\${{ env.buildRelease }}\hlds.exe publish\hlds.exe
          move msvc\${{ env.buildRelease }}\swds.dll publish\swds.dll
          move msvc\${{ env.buildRelease }}\hlds.pdb publish\hlds.pdb
          move msvc\${{ env.buildRelease }}\swds.pdb publish\swds.pdb

      - name: Deploy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win32
          path: publish/*

  linux:
    name: 'Linux'
    runs-on: ubuntu-24.04
    container: debian:11-slim

    steps:
      - name: Install dependencies
        run: |
          dpkg --add-architecture i386
          apt-get update
          apt-get install -y \
            gcc-multilib g++-multilib \
            build-essential \
            libc6-dev libc6-dev-i386 \
            git cmake rsync \
            g++ gcc

      - name: Configure
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build using GCC Compiler
        run: |
          rm -rf build && cmake -B build && cmake --build build -j8

      - name: Prepare HLSDK
        run: |
          mkdir -p publish/hlsdk
          rsync -a rehlds/common/ publish/hlsdk/common/
          rsync -a rehlds/dlls/ publish/hlsdk/dlls/
          rsync -a rehlds/pm_shared/ publish/hlsdk/pm_shared/
          rsync -a rehlds/public/ publish/hlsdk/public/ --exclude rehlds/
          rsync -a rehlds/public/rehlds/ publish/hlsdk/engine

      - name: Move files
        run: |
          mkdir -p publish
          mv build/rehlds/engine_i486.so publish/engine_i486.so

      - name: Deploy artifacts
        uses: actions/upload-artifact@v4
        id: upload-job
        with:
          name: linux32
          path: publish/*

  publish:
    name: 'Publish'
    runs-on: ubuntu-24.04
    needs: [windows, linux]

    steps:
      - name: Deploying linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux32

      - name: Deploying windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: win32

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2
        id: publish-job
        if: |
          startsWith(github.ref, 'refs/tags/') &&
          steps.packaging-job.outcome == 'success'
        with:
          files: |
            *.exe
            *.dll
            *.pdb
            *.so
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
